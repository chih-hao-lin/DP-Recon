name: "test-threestudio-iso-nerf"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 42

data_type: "random-multiview-camera-datamodule"
data:
  batch_size: [4, 4] # must be dividable by n_view
  n_view: 4

  # width: [128, 128]
  # height: [128, 128]
  width: [64, 64]
  height: [64, 64]

  resolution_milestones: [5000]

  relative_radius: true
  camera_distance_range: [0.8, 1.0] # relative
  fovy_range: [40, 45]
  elevation_range: [5, 30]
  ele_random_prob: 1.0


  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  n_val_views: 4
  eval_camera_distance: 3.0
  eval_fovy_deg: 40.

  # azimuth_range: [-180, 180]
  azimuth_range: [-180, 180]
  zoom_range: [1.0, 1.0]
  light_sample_strategy: "dreamfusion"
  light_distance_range: [0.8, 1.5]
  light_position_perturb: 1.0
  eval_elevation_deg: 15.0
  progressive_until: 0


system_type: "nd-mvdream-system"
system:
  latent_steps: 1500
  nd_latent_steps: ${trainer.max_steps}
  texture: False
  do_init: False

  geometry_type: "implicit-sdf"
  geometry:
    radius: 1.0
    normal_type: "finite_difference"

    n_feature_dims: 3
    isosurface_method: "mc-cpu"                 # use marching cubes, default is "mt"
    isosurface_resolution: 256
    isosurface_deformable_grid: false
    isosurface_coarse_to_fine: false
    # initialize SDF by optimization
    shape_init: sphere
    shape_init_params: 0.8

    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096


  material_type: "no-material"
  material:
    n_output_dims: 3
    requires_normal: true

  background_type: "solid-color-background"

  renderer_type: "neus-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 128
    camera_distance_range: ${data.camera_distance_range}
    return_comp_normal: True
    occ_grid_res: 128
    depth_norm_radius: 1.0
    use_volsdf: True            # use volsdf for rendering

  use_sd_prior: true
  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: ""

  guidance_type: "stable-diffusion-guidance"
  guidance:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    guidance_scale: 50.
    weighting_strategy: fantasia3d

    min_step_percent: [2500, 0.20, 0.02, 5000]  # (start_iter, start_val, end_val, end_iter)
    max_step_percent: [2500, 0.98, 0.40, 5000]

    use_vis_mask: true                          # use visibility mask to adjust sds loss
    vis_region_max: 0.1                         # visible region [0, 0.1]
    none_vis_region_max: 20.0                   # none visible region [1, 20]
    view_dependent_prompting: false

    collect_inputs: ['comp_normal_cam_vis', 'opacity']
    share_t: false

  loggers:
    wandb:
      enable: false
      project: "threestudio"

  loss:
    lambda_nd: [0, 1, 1, 10000]
    lambda_rgb_sd: [0, 1, 1, 10000]
    lambda_nd_w: [0, 10.0, 2.0, 3501]

    lambda_rgb_sds: 1.
    lambda_nd_sds: 1.
    lambda_nd_sg_sds: 1.

    lambda_orient: [0, 10., 1000., 5000]
    lambda_sparsity: 0.01
    lambda_opaque: 0.
    lambda_z_variance: 0.
    lambda_normal_consistency: 0

  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
      lr: 0.01
    params:
      geometry.encoding:
        lr: 0.01
      geometry.sdf_network:
        lr: 0.001
      geometry.feature_network:
        lr: 0.001
      background:
        lr: 0.001

trainer:
  max_steps: 5000
  log_every_n_steps: 100
  num_sanity_val_steps: 0
  val_check_interval: 200
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
